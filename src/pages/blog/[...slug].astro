---
import type { CollectionEntry } from "astro:content";
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import MainLayout from "@layouts/MainLayout.astro";
import { Image } from "astro:assets";
import BlogPostCard from "@components/BlogPostCard.astro";

const posts = await getCollection("blog");

export const getStaticPaths = (async ({}) => {
  const posts = await getCollection("blog");
  return posts.map((post) => {
    return {
      params: { slug: post.slug },
      props: { post: post },
    };
  });
}) satisfies GetStaticPaths;

type Props = {
  post: CollectionEntry<"blog">;
};

const { post } = Astro.props;
const { data, render } = post;
const { Content } = await render();

const currentSlug = post.slug;
const filteredPosts = posts
  .filter((post) => post.slug !== currentSlug)
  .sort(
    (a, b) => b.data.publishedDate.valueOf() - a.data.publishedDate.valueOf()
  );

function shuffledPosts(array) {
  let i = filteredPosts.length - 1;
  for (; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    const temp = array[i];
    array[i] = array[j];
    array[j] = temp;
  }
  return array;
}
const relatedPosts = shuffledPosts(filteredPosts).slice(0, 2);
---

<MainLayout
  title={data.title}
  description={data.description}
  coverImage={data.coverImage}
  tags={data.tags}
  publishedDate={data.publishedDate}
  pageType="article"
>
  <div class="grid-container relative mx-auto max-w-screen-md md:z-10">
    <div
      class="mx-auto w-fit max-w-full py-8 px-6 md:px-10 md:py-12 lg:px-12 lg:py-16 xl:p-16 xl:py-20"
    >
      <header class="pb-10">
        <h1 class="text-4xl font-bold">
          {post.data.title}
        </h1>
        <time
          datetime={post.data.publishedDate.toDateString()}
          class="text-gray-500">{post.data.publishedDate.toDateString()}</time
        >
      </header>
      <div class="py-5">
        <Image
          src={data.coverImage}
          widths={[240, 540, 720, data.coverImage.width]}
          sizes={`(max-width: 360px) 240px, (max-width: 720px) 540px, (max-width: 1600px) 720px, ${data.coverImage.width}px`}
          alt={data.title}
          loading="eager"
          fetchpriority="high"
        />
      </div>

      <article class="prose prose-slate" aria-label={post.data.title}>
        <Content />
      </article>
    </div>

    <!-- related post here -->
    <div class="px-8">
      <h2 class="text-2xl font-bold my-10">Read Next</h2>
      <div class="grid md:grid-cols-2 gap-10">
        {relatedPosts.map((post: any) => <BlogPostCard post={post} />)}
      </div>
    </div>
  </div>
</MainLayout>
